length(fatality_sum_2017$fatalts)
sum(fatality_sum_2017$fatalts)
#fatalities in 2018
fatality_sum_2018 = sf::st_filter(acled_2018, closed_bases_south_2018_buffers, .pred = st_within)
length(fatality_sum_2018$fatalts)
sum(fatality_sum_2018$fatalts)
#fatalities in 2019
fatality_sum_2019 = sf::st_filter(acled_2019, closed_bases_south_2018_buffers, .pred = st_within)
length(fatality_sum_2019$fatalts)
sum(fatality_sum_2019$fatalts)
#fatalities in 2020
fatality_sum_2020 = sf::st_filter(acled_2020, closed_bases_south_2018_buffers, .pred = st_within)
length(fatality_sum_2020$fatalts)
sum(fatality_sum_2020$fatalts)
tmap_mode("plot")
t_2018.2=tm_shape(active_bases_2018_joined.4269, bbox =my_box) + tm_fill("avg_troops", title="Average Number\nof UN Troops", palette="Greens") +
layout_no_title +
tm_borders() +
tm_add_legend(title="") +
tm_shape(closed_bases_south_2018) +
tm_dots(size=0.5, col="steelblue") +
tm_shape(unionBuffers) +
tm_borders(col = "blue") +
tm_shape(acled_2018)+
tm_bubbles(size="fatalts", col="red", alpha=0.3, jitter=0.05, title.size="Fatalities", breaks=c(0,10,20,30,40,50), sizes.legend=c(10,20,30,40,50), sizes.legend.labels=c("10","20","30","40","50"))+
tm_credits(text="2018", position=c("center", "bottom"), size=1.5)+
tm_legend(show = FALSE)
#2018 vs. 2019
#2018
my_box <- rgeos::bbox2SP(n = 16.12054, s = 8.64132, w = 21.61368, e = 29.58313, proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
CRS.new <- st_crs("EPSG:4269")
active_bases_2018_joined = readOGR(dsn = paste0(getwd()), layer="active_bases_2018_joined")
active_bases_2018_joined <- st_as_sf(active_bases_2018_joined)
active_bases_2018_joined.4269 <- st_transform(active_bases_2018_joined, CRS.new)
CRS.new <- st_crs("EPSG:4087")
closed_bases_south_2019 <-raster::shapefile("C:/Users/rsb84/Desktop/RB/COLUMBIA/QMSS/COURSES/Spring_2021/Data Visualization/End_project/closed_bases_south_2019-portfolio_2023.shp")
closed_bases_south_2019=st_as_sf(closed_bases_south_2019)
closed_bases_south_2019=st_transform(closed_bases_south_2019, CRS.new)
acled_2018 = readOGR(dsn = paste0(getwd()), layer="acled_2018")
acled_2018<-st_as_sf(acled_2018)
acled_2018 <- st_transform(acled_2018, CRS.new)
closed_bases_south_2019_buffers <- st_buffer(closed_bases_south_2019, 80467.2)
unionBuffers <- st_union(closed_bases_south_2019_buffers)
tmap_mode("plot")
t_2018.3=tm_shape(active_bases_2018_joined.4269, bbox =my_box) + tm_fill("avg_troops", title="Average Number\nof UN Troops", palette="Greens") +
layout3 +
tm_borders() +
tm_add_legend(title="") +
tm_shape(closed_bases_south_2019) +
tm_dots(size=0.5, col="steelblue") +
tm_shape(unionBuffers) +
tm_borders(col = "blue") +
tm_shape(acled_2018)+
tm_bubbles(size="fatalts", col="red", alpha=0.3, jitter=0.05, title.size="Fatalities", breaks=c(0,10,20,30,40,50), sizes.legend=c(10,20,30,40,50), sizes.legend.labels=c("10","20","30","40","50"))+
tm_credits(text="2018", position=c("center", "bottom"), size=1.5)
#2019
CRS.new <- st_crs("EPSG:4269")
active_bases_2019_joined = readOGR(dsn = paste0(getwd()), layer="active_bases_2019_joined")
active_bases_2019_joined <- st_as_sf(active_bases_2019_joined)
active_bases_2019_joined.4269 <- st_transform(active_bases_2019_joined, CRS.new)
CRS.new <- st_crs("EPSG:4087")
closed_bases_south_2019 <-raster::shapefile("C:/Users/rsb84/Desktop/RB/COLUMBIA/QMSS/COURSES/Spring_2021/Data Visualization/End_project/closed_bases_south_2019-portfolio_2023.shp")
closed_bases_south_2019=st_as_sf(closed_bases_south_2019)
closed_bases_south_2019=st_transform(closed_bases_south_2019, CRS.new)
closed_bases_south_2019_buffers <- st_buffer(closed_bases_south_2019, 80467.2)
unionBuffers <- st_union(closed_bases_south_2019_buffers)
#fatalities in 2018
fatality_sum_2018 = sf::st_filter(acled_2018, closed_bases_south_2019_buffers, .pred = st_within)
length(fatality_sum_2018$fatalts)
sum(fatality_sum_2018$fatalts)
#fatalities in 2019
fatality_sum_2019 = sf::st_filter(acled_2019, closed_bases_south_2019_buffers, .pred = st_within)
length(fatality_sum_2019$fatalts)
sum(fatality_sum_2019$fatalts)
#fatalities in 2020
fatality_sum_2020 = sf::st_filter(acled_2020, closed_bases_south_2019_buffers, .pred = st_within)
length(fatality_sum_2020$fatalts)
sum(fatality_sum_2020$fatalts)
tmap_mode("plot")
t_2019.3=tm_shape(active_bases_2019_joined.4269, bbox =my_box) + tm_fill("avg_troops", title="Average Number\nof UN Troops", palette="Greens") +
layout_no_title +
tm_borders() +
tm_add_legend(title="") +
tm_shape(closed_bases_south_2019) +
tm_dots(size=0.5, col="steelblue") +
tm_shape(unionBuffers) +
tm_borders(col = "blue") +
tm_shape(acled_2019)+
tm_bubbles(size="fatalts", col="red", alpha=0.3, jitter=0.05, title.size="Fatalities", breaks=c(0,10,20,30,40,50), sizes.legend=c(10,20,30,40,50), sizes.legend.labels=c("10","20","30","40","50"))+
tm_credits(text="2019", position=c("center", "bottom"), size=1.5)+
tm_legend(show = FALSE)
#Calculating fatalities (sum) and attacks (length) in 2016 - Buffer 2017
fatality_sum_2016.buffer_2017 = sf::st_filter(acled_2016, closed_bases_south_2017_buffers, .pred = st_within)
length(fatality_sum_2016.buffer_2017$fatalities)
sum(fatality_sum_2016.buffer_2017$fatalities)
#Calculating fatalities (sum) and attacks (length) in 2017 - Buffer 2017
fatality_sum_2017.buffer_2017 = sf::st_filter(acled_2017, closed_bases_south_2017_buffers, .pred = st_within)
length(fatality_sum_2017.buffer_2017$fatalts)
sum(fatality_sum_2017.buffer_2017$fatalts)
#Calculating fatalities (sum) and attacks (length) in 2018 - Buffer 2017
fatality_sum_2018.buffer_2017 = sf::st_filter(acled_2018, closed_bases_south_2017_buffers, .pred = st_within)
length(fatality_sum_2018.buffer_2017$fatalts)
sum(fatality_sum_2018.buffer_2017$fatalts)
#Calculating fatalities (sum) and attacks (length) in 2019 - Buffer 2017
fatality_sum_2019.buffer_2017 = sf::st_filter(acled_2019, closed_bases_south_2017_buffers, .pred = st_within)
length(fatality_sum_2019.buffer_2017$fatalts)
sum(fatality_sum_2019.buffer_2017$fatalts)
#Calculating fatalities (sum) and attacks (length) in 2020 - Buffer 2017
fatality_sum_2020.buffer_2017 = sf::st_filter(acled_2020, closed_bases_south_2017_buffers, .pred = st_within)
length(fatality_sum_2020.buffer_2017$fatalts)
sum(fatality_sum_2020.buffer_2017$fatalts)
acled_2021 = readOGR(dsn = paste0(getwd()), layer="acled_2021")
CRS.new <- st_crs("EPSG:4087")
acled_2021<-st_as_sf(acled_2021)
acled_2021 <- st_transform(acled_2021, CRS.new)
#Calculating fatalities (sum) and attacks (length) in 2021 - Buffer 2017
fatality_sum_2021.buffer_2017 = sf::st_filter(acled_2021, closed_bases_south_2017_buffers, .pred = st_within)
fatality_sum_2021.buffer_2017$fatalities=as.numeric(fatality_sum_2021.buffer_2017$fatalities)
length(fatality_sum_2021.buffer_2017$fatalities)
sum(fatality_sum_2021.buffer_2017$fatalities)
#Calculating fatalities (sum) and attacks (length) in 2016 - Buffer 2018
fatality_sum_2016.buffer_2018 = sf::st_filter(acled_2016, closed_bases_south_2018_buffers, .pred = st_within)
length(fatality_sum_2016.buffer_2018$fatalities)
sum(fatality_sum_2016.buffer_2018$fatalities)
#Calculating fatalities (sum) and attacks (length) in 2017 - Buffer 2018
fatality_sum_2017.buffer_2018 = sf::st_filter(acled_2017, closed_bases_south_2018_buffers, .pred = st_within)
length(fatality_sum_2017.buffer_2018$fatalts)
sum(fatality_sum_2017.buffer_2018$fatalts)
#Calculating fatalities (sum) and attacks (length) in 2018 - Buffer 2018
fatality_sum_2018.buffer_2018 = sf::st_filter(acled_2018, closed_bases_south_2018_buffers, .pred = st_within)
length(fatality_sum_2018.buffer_2018$fatalts)
sum(fatality_sum_2018.buffer_2018$fatalts)
#Calculating fatalities (sum) and attacks (length) in 2019 - Buffer 2018
fatality_sum_2019.buffer_2018 = sf::st_filter(acled_2019, closed_bases_south_2018_buffers, .pred = st_within)
length(fatality_sum_2019.buffer_2018$fatalts)
sum(fatality_sum_2019.buffer_2018$fatalts)
#Calculating fatalities (sum) and attacks (length) in 2020 - Buffer 2018
fatality_sum_2020.buffer_2018 = sf::st_filter(acled_2020, closed_bases_south_2018_buffers, .pred = st_within)
length(fatality_sum_2020.buffer_2018$fatalts)
sum(fatality_sum_2020.buffer_2018$fatalts)
#Calculating fatalities (sum) and attacks (length) in 2021 - Buffer 2018
fatality_sum_2021.buffer_2018 = sf::st_filter(acled_2021, closed_bases_south_2018_buffers, .pred = st_within)
fatality_sum_2021.buffer_2018$fatalities=as.numeric(fatality_sum_2021.buffer_2018$fatalities)
length(fatality_sum_2021.buffer_2018$fatalities)
sum(fatality_sum_2021.buffer_2018$fatalities)
#Calculating fatalities (sum) and attacks (length) in 2016 - Buffer 2019
fatality_sum_2016.buffer_2019 = sf::st_filter(acled_2016, closed_bases_south_2019_buffers, .pred = st_within)
length(fatality_sum_2016.buffer_2019$fatalities)
sum(fatality_sum_2016.buffer_2019$fatalities)
#Calculating fatalities (sum) and attacks (length) in 2017 - Buffer 2019
fatality_sum_2017.buffer_2019 = sf::st_filter(acled_2017, closed_bases_south_2019_buffers, .pred = st_within)
length(fatality_sum_2017.buffer_2019$fatalts)
sum(fatality_sum_2017.buffer_2019$fatalts)
#Calculating fatalities (sum) and attacks (length) in 2018 - Buffer 2019
fatality_sum_2018.buffer_2019 = sf::st_filter(acled_2018, closed_bases_south_2019_buffers, .pred = st_within)
length(fatality_sum_2018.buffer_2019$fatalts)
sum(fatality_sum_2018.buffer_2019$fatalts)
#Calculating fatalities (sum) and attacks (length) in 2019 - Buffer 2019
fatality_sum_2019.buffer_2019 = sf::st_filter(acled_2019, closed_bases_south_2019_buffers, .pred = st_within)
length(fatality_sum_2019.buffer_2019$fatalts)
sum(fatality_sum_2019.buffer_2019$fatalts)
#Calculating fatalities (sum) and attacks (length) in 2020 - Buffer 2019
fatality_sum_2020.buffer_2019 = sf::st_filter(acled_2020, closed_bases_south_2019_buffers, .pred = st_within)
length(fatality_sum_2020.buffer_2019$fatalts)
sum(fatality_sum_2020.buffer_2019$fatalts)
#Calculating fatalities (sum) and attacks (length) in 2021 - Buffer 2019
fatality_sum_2021.buffer_2019 = sf::st_filter(acled_2021, closed_bases_south_2019_buffers, .pred = st_within)
fatality_sum_2021.buffer_2019$fatalities=as.numeric(fatality_sum_2021.buffer_2019$fatalities)
length(fatality_sum_2021.buffer_2019$fatalities)
sum(fatality_sum_2021.buffer_2019$fatalities)
acled_2020 = readOGR(dsn = paste0(getwd()), layer="acled_2020")
acled_2020 <-st_as_sf(acled_2020)
acled_2020 <- st_transform(acled_2020, CRS.new)
tmap_arrange(t_2016.1, t_2017.1, t_2017.2, t_2018.2, t_2018.3, t_2019.3, nrow = 3, ncol = 2, asp=1, outer.margins = 0)
library(stringr)
# Get the current page number from the file name
current_page <- as.numeric(str_extract(knitr::current_input(), "\\d+"))
# Set the total number of pages
total_pages <- 9
# Generate the URLs for the previous and next pages
previous_page <- ifelse(current_page > 1, paste0("visual_", current_page - 1, "-darfur_violence.html"), NA)
next_page <- ifelse(current_page < total_pages, paste0("visual_", current_page + 1, "-darfur_violence.html"), NA)
library(stringr)
# Get the current page number from the file name
current_page <- as.numeric(str_extract(knitr::current_input(), "\\d+"))
# Set the total number of pages
total_pages <- 9
# Generate the URLs for the previous and next pages
previous_page <- ifelse(current_page > 1, paste0("visual_", current_page - 1, "-darfur_violence.html"), NA)
next_page <- ifelse(current_page < total_pages, paste0("visual_", current_page + 1, "-darfur_violence.html"), NA)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(rgdal)
library(lubridate)
library(rtweet)
library(network)
library(igraph)
library(ggraph)
library(ggnetwork)
library(GGally)
library(ggrepel)
library(jsonlite)
library(intergraph)
library(svgPanZoom)
library(DT)
library(widgetframe)
library(viridis)
library(tmap)
library(ggmap)
library(rgdal)
library(sp)
library(sf)
library(tigris)
options(tigris_use_cache=TRUE)
options(tigris_class="sf")
library(ggtext)
library(plotly)
setwd("C:/Users/rsb84/Desktop/RB/COLUMBIA/QMSS/COURSES/Spring_2021/Data Visualization/End_project")
ACLED_data <- readxl::read_excel("ACLED-DARFUR-VAC-2008-2021 (After Course Ended-for 2023 Portfolio)-UPDATED VERSION-inter1_numbers_replaced_with_actor_names.xlsx",
col_types = c("date", "numeric", "text",
"text", "text", "text", "text", "text",
"text", "text", "text", "text", "text",
"numeric", "numeric", "text", "text",
"text", "numeric", "numeric"))
fatalities_by_year_region=ACLED_data %>% group_by(year, admin1) %>% tally(fatalities)
df=fatalities_by_year_region %>%
group_by(year) %>%
mutate(pct= prop.table(n) * 100) %>%
mutate(Percent = round(pct, digits = 2),
Region = admin1,
Year = year)
df_2016_2021 = subset(df, df$Year != 2008 & df$Year != 2009 & df$Year != 2010 & df$Year != 2011 & df$Year != 2012 & df$Year != 2013 & df$Year != 2014 & df$Year != 2015)
# Define colors corresponding to each group
colors <- c("Central Darfur" = "maroon1",
"North Darfur" = "deepskyblue1",
"South Darfur" = "peru",
"East Farfur" = "gray65",
"West Darfur" = "black")
# Specify the custom labels for the y-axis
custom_labels <- c("0", "25", "50", "75", "100")
# Create the plot
gg <- ggplot(df_2016_2021, aes(x = Year, y = Percent, fill = Region)) +
geom_col(position = "fill", width = 0.8, size = 1, alpha = 0.7) +
scale_fill_manual(values = colors,
breaks = c("Central Darfur", "North Darfur", "South Darfur", "East Darfur", "West Darfur"),
labels = c("Central Darfur", "North Darfur", "South Darfur", "East Darfur", "West Darfur")) +
scale_y_continuous(breaks = seq(0, 1, by = 0.25), labels = custom_labels) +  # Set custom breaks and labels for y-axis
scale_x_continuous(breaks = seq(min(df_2016_2021$Year), max(df_2016_2021$Year), by = 1)) +  # Ensure years are displayed without gaps
theme_wsj() +
theme(legend.position = "top",
title = element_text(size = 14, color = "steelblue", face = 'bold'),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 9.7),
axis.text.y = element_text(size = 12)) +
labs(title = "Percentage Breakdown of Darfur Civilian Killings by Region \n(2016 - 2021)",
subtitle = "",
caption = "") +
theme(plot.title = element_text(hjust = 0.5)) +
guides(fill = guide_legend(title = ""))
ggplotly(gg)
library(stringr)
# Get the current page number from the file name
current_page <- as.numeric(str_extract(knitr::current_input(), "\\d+"))
# Set the total number of pages
total_pages <- 9
# Generate the URLs for the previous and next pages
previous_page <- ifelse(current_page > 1, paste0("visual_", current_page - 1, "-darfur_violence.html"), NA)
next_page <- ifelse(current_page < total_pages, paste0("visual_", current_page + 1, "-darfur_violence.html"), NA)
library(stringr)
# Get the current page number from the file name
current_page <- as.numeric(str_extract(knitr::current_input(), "\\d+"))
# Set the total number of pages
total_pages <- 9
# Generate the URLs for the previous and next pages
previous_page <- ifelse(current_page > 1, paste0("visual_", current_page - 1, "-darfur_violence.html"), NA)
next_page <- ifelse(current_page < total_pages, paste0("visual_", current_page + 1, "-darfur_violence.html"), NA)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(rgdal)
library(lubridate)
library(rtweet)
library(network)
library(igraph)
library(ggraph)
library(ggnetwork)
library(GGally)
library(ggrepel)
library(jsonlite)
library(intergraph)
library(svgPanZoom)
library(DT)
library(widgetframe)
library(viridis)
library(tmap)
library(ggmap)
library(rgdal)
library(sp)
library(sf)
library(tigris)
options(tigris_use_cache=TRUE)
options(tigris_class="sf")
library(ggtext)
library(plotly)
setwd("C:/Users/rsb84/Desktop/RB/COLUMBIA/QMSS/COURSES/Spring_2021/Data Visualization/End_project")
ACLED_data <- readxl::read_excel("ACLED-DARFUR-VAC-2008-2021 (After Course Ended-for 2023 Portfolio)-UPDATED VERSION-inter1_numbers_replaced_with_actor_names.xlsx",
col_types = c("date", "numeric", "text",
"text", "text", "text", "text", "text",
"text", "text", "text", "text", "text",
"numeric", "numeric", "text", "text",
"text", "numeric", "numeric"))
fatalities_by_year_region=ACLED_data %>% group_by(year, admin1) %>% tally(fatalities)
df=fatalities_by_year_region %>%
group_by(year) %>%
mutate(pct= prop.table(n) * 100) %>%
mutate(Percent = round(pct, digits = 2),
Region = admin1,
Year = year)
df_2016_2021 = subset(df, df$Year != 2008 & df$Year != 2009 & df$Year != 2010 & df$Year != 2011 & df$Year != 2012 & df$Year != 2013 & df$Year != 2014 & df$Year != 2015)
# Define colors corresponding to each group
colors <- c("Central Darfur" = "maroon1",
"North Darfur" = "deepskyblue1",
"South Darfur" = "peru",
"East Farfur" = "gray65",
"West Darfur" = "black")
# Specify the custom labels for the y-axis
custom_labels <- c("0", "25", "50", "75", "100")
# Create the plot
gg <- ggplot(df_2016_2021, aes(x = Year, y = Percent, fill = Region)) +
geom_col(position = "fill", width = 0.8, size = 1, alpha = 0.7) +
scale_fill_manual(values = colors,
breaks = c("Central Darfur", "North Darfur", "South Darfur", "East Darfur", "West Darfur"),
labels = c("Central Darfur", "North Darfur", "South Darfur", "East Darfur", "West Darfur")) +
scale_y_continuous(breaks = seq(0, 1, by = 0.25), labels = custom_labels) +  # Set custom breaks and labels for y-axis
scale_x_continuous(breaks = seq(min(df_2016_2021$Year), max(df_2016_2021$Year), by = 1)) +  # Ensure years are displayed without gaps
theme_wsj() +
theme(legend.position = "top",
title = element_text(size = 16, color = "steelblue", face = 'bold'),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 14),
legend.text=element_text(size=13)) +
labs(title = "Percentage Breakdown of Darfur Civilian Killings by Region \n(2016 - 2021)",
subtitle = "",
caption = "") +
theme(plot.title = element_text(hjust = 0.5)) +
guides(fill = guide_legend(title = ""))
ggplotly(gg)
library(stringr)
# Get the current page number from the file name
current_page <- as.numeric(str_extract(knitr::current_input(), "\\d+"))
# Set the total number of pages
total_pages <- 9
# Generate the URLs for the previous and next pages
previous_page <- ifelse(current_page > 1, paste0("visual_", current_page - 1, "-darfur_violence.html"), NA)
next_page <- ifelse(current_page < total_pages, paste0("visual_", current_page + 1, "-darfur_violence.html"), NA)
library(stringr)
# Get the current page number from the file name
current_page <- as.numeric(str_extract(knitr::current_input(), "\\d+"))
# Set the total number of pages
total_pages <- 9
# Generate the URLs for the previous and next pages
previous_page <- ifelse(current_page > 1, paste0("visual_", current_page - 1, "-darfur_violence.html"), NA)
next_page <- ifelse(current_page < total_pages, paste0("visual_", current_page + 1, "-darfur_violence.html"), NA)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(rgdal)
library(lubridate)
library(rtweet)
library(network)
library(igraph)
library(ggraph)
library(ggnetwork)
library(GGally)
library(ggrepel)
library(jsonlite)
library(intergraph)
library(svgPanZoom)
library(DT)
library(widgetframe)
library(viridis)
library(tmap)
library(ggmap)
library(rgdal)
library(sp)
library(sf)
library(tigris)
options(tigris_use_cache=TRUE)
options(tigris_class="sf")
library(ggtext)
library(plotly)
setwd("C:/Users/rsb84/Desktop/RB/COLUMBIA/QMSS/COURSES/Spring_2021/Data Visualization/End_project")
ACLED_data <- readxl::read_excel("ACLED-DARFUR-VAC-2008-2021 (After Course Ended-for 2023 Portfolio)-UPDATED VERSION-inter1_numbers_replaced_with_actor_names.xlsx",
col_types = c("date", "numeric", "text",
"text", "text", "text", "text", "text",
"text", "text", "text", "text", "text",
"numeric", "numeric", "text", "text",
"text", "numeric", "numeric"))
fatalities_by_year_region=ACLED_data %>% group_by(year, admin1) %>% tally(fatalities)
df=fatalities_by_year_region %>%
group_by(year) %>%
mutate(pct= prop.table(n) * 100) %>%
mutate(Percent = round(pct, digits = 2),
Region = admin1,
Year = year)
df_2016_2021 = subset(df, df$Year != 2008 & df$Year != 2009 & df$Year != 2010 & df$Year != 2011 & df$Year != 2012 & df$Year != 2013 & df$Year != 2014 & df$Year != 2015)
# Define colors corresponding to each group
colors <- c("Central Darfur" = "maroon1",
"North Darfur" = "deepskyblue1",
"South Darfur" = "peru",
"East Farfur" = "gray65",
"West Darfur" = "black")
# Specify the custom labels for the y-axis
custom_labels <- c("0", "25", "50", "75", "100")
# Create the plot
gg <- ggplot(df_2016_2021, aes(x = Year, y = Percent, fill = Region)) +
geom_col(position = "fill", width = 0.8, size = 1, alpha = 0.7) +
scale_fill_manual(values = colors,
breaks = c("Central Darfur", "North Darfur", "South Darfur", "East Darfur", "West Darfur"),
labels = c("Central Darfur", "North Darfur", "South Darfur", "East Darfur", "West Darfur")) +
scale_y_continuous(breaks = seq(0, 1, by = 0.25), labels = custom_labels) +  # Set custom breaks and labels for y-axis
scale_x_continuous(breaks = seq(min(df_2016_2021$Year), max(df_2016_2021$Year), by = 1)) +  # Ensure years are displayed without gaps
theme_wsj() +
theme(legend.position = "top",
title = element_text(size = 14, color = "steelblue", face = 'bold'),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 14),
legend.text=element_text(size=13)) +
labs(title = "Percentage Breakdown of Darfur Civilian Killings by Region \n(2016 - 2021)",
subtitle = "",
caption = "") +
theme(plot.title = element_text(hjust = 0.5)) +
guides(fill = guide_legend(title = ""))
ggplotly(gg)
library(stringr)
# Get the current page number from the file name
current_page <- as.numeric(str_extract(knitr::current_input(), "\\d+"))
# Set the total number of pages
total_pages <- 9
# Generate the URLs for the previous and next pages
previous_page <- ifelse(current_page > 1, paste0("visual_", current_page - 1, "-darfur_violence.html"), NA)
next_page <- ifelse(current_page < total_pages, paste0("visual_", current_page + 1, "-darfur_violence.html"), NA)
library(stringr)
# Get the current page number from the file name
current_page <- as.numeric(str_extract(knitr::current_input(), "\\d+"))
# Set the total number of pages
total_pages <- 9
# Generate the URLs for the previous and next pages
previous_page <- ifelse(current_page > 1, paste0("visual_", current_page - 1, "-darfur_violence-code_included.html"), NA)
next_page <- ifelse(current_page < total_pages, paste0("visual_", current_page + 1, "-darfur_violence-code_included.html"), NA)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(plotly)
setwd("C:/Users/rsb84/Desktop/RB/COLUMBIA/QMSS/COURSES/Spring_2021/Data Visualization/End_project")
ACLED_data <- readxl::read_excel("ACLED-DARFUR-VAC-2008-2021 (After Course Ended-for 2023 Portfolio)-UPDATED VERSION-inter1_numbers_replaced_with_actor_names.xlsx",
col_types = c("date", "numeric", "text",
"text", "text", "text", "text", "text",
"text", "text", "text", "text", "text",
"numeric", "numeric", "text", "text",
"text", "numeric", "numeric"))
fatalities_by_year_region=ACLED_data %>% group_by(year, admin1) %>% tally(fatalities)
df=fatalities_by_year_region %>%
group_by(year) %>%
mutate(pct= prop.table(n) * 100) %>%
mutate(Percent = round(pct, digits = 2),
Region = admin1,
Year = year)
df_2016_2021 = subset(df, df$Year != 2008 & df$Year != 2009 & df$Year != 2010 & df$Year != 2011 & df$Year != 2012 & df$Year != 2013 & df$Year != 2014 & df$Year != 2015)
# Define colors corresponding to each group
colors <- c("Central Darfur" = "maroon1",
"North Darfur" = "deepskyblue1",
"South Darfur" = "peru",
"East Farfur" = "gray65",
"West Darfur" = "black")
# Specify the custom labels for the y-axis
custom_labels <- c("0", "25", "50", "75", "100")
# Create the plot
gg <- ggplot(df_2016_2021, aes(x = Year, y = Percent, fill = Region)) +
geom_col(position = "fill", width = 0.8, size = 1, alpha = 0.7) +
scale_fill_manual(values = colors,
breaks = c("Central Darfur", "North Darfur", "South Darfur", "East Darfur", "West Darfur"),
labels = c("Central Darfur", "North Darfur", "South Darfur", "East Darfur", "West Darfur")) +
scale_y_continuous(breaks = seq(0, 1, by = 0.25), labels = custom_labels) +  # Set custom breaks and labels for y-axis
scale_x_continuous(breaks = seq(min(df_2016_2021$Year), max(df_2016_2021$Year), by = 1)) +  # Ensure years are displayed without gaps
theme_wsj() +
theme(legend.position = "top",
title = element_text(size = 14, color = "steelblue", face = 'bold'),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 14),
legend.text=element_text(size=13)) +
labs(title = "Percentage Breakdown of Darfur Civilian Killings by Region \n(2016 - 2021)",
subtitle = "",
caption = "") +
theme(plot.title = element_text(hjust = 0.5)) +
guides(fill = guide_legend(title = ""))
ggplotly(gg, height = 600, width = 850)
# Get the current page number from the file name
current_page <- as.numeric(str_extract(knitr::current_input(), "\\d+"))
# Set the total number of pages
total_pages <- 9
# Generate the URLs for the previous and next pages
previous_page <- ifelse(current_page > 1, paste0("visual_", current_page - 1, "-darfur_violence-code_included.html"), NA)
next_page <- ifelse(current_page < total_pages, paste0("visual_", current_page + 1, "-darfur_violence-code_included.html"), NA)
